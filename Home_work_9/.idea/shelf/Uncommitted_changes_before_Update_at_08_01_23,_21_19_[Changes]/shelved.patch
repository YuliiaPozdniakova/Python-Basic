Index: ../Home_work_8/def_counter.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Дан список чисел.\n#\n# Посчитать сколько раз встречается каждое число.\n# Использовать для подсчёта функцию.\n#\n# Подсказка: для хранения данных использовать словарь\n# (ключ - само число, а значение - сколько раз оно встречается).\n# Для проверки нахождения элемента в словаре использовать метод get(), либо оператор in.\n\nimport collections\n\nlst = [3, 2, 1, 4, 2, 5, 3, 1, 2]\n\ndef count(a):\n    return print(collections.Counter(lst))\n\ncount(lst)\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Home_work_8/def_counter.py b/../Home_work_8/def_counter.py
--- a/../Home_work_8/def_counter.py	(revision 2ff196cd45714c95886adfb61cc8161277f45b00)
+++ b/../Home_work_8/def_counter.py	(date 1673205334347)
@@ -7,13 +7,31 @@
 # (ключ - само число, а значение - сколько раз оно встречается).
 # Для проверки нахождения элемента в словаре использовать метод get(), либо оператор in.
 
-import collections
+
+list_number = [3, 2, 1, 4, 2, 5, 3, 1, 2]
+dict_result = {}
+
+
+def count_number(list_number, dict_result):
+    for i in list_number:
+        if i in dict_result:
+            dict_result[i] += 1
+        else:
+            dict_result[i] = 1
+    print(dict_result)
 
-lst = [3, 2, 1, 4, 2, 5, 3, 1, 2]
 
-def count(a):
-    return print(collections.Counter(lst))
+count_number(list_number, dict_result)
 
-count(lst)
+
+# інше рішення, яке було першим.
+# але мені здалося, що воно не дуже гарне в контексті умов завдання
+#
+# import collections
+#
+# def count(a):
+#     return print(collections.Counter(lst))
+#
+# count(list_number)
 
 
